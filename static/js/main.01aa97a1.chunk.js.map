{"version":3,"sources":["components/cell.jsx","components/status.jsx","components/board.jsx","components/players.jsx","App.js","reportWebVitals.js","index.js"],"names":["Cell","props","cell","margin","width","height","padding","border","fontSize","type","style","this","id","index","onClick","cellClick","value","React","Component","Status","console","log","currentPlayer","gameStatus","Board","div","backgroundColor","color","turn","display","justifyContent","alignContent","marign","victoryCheck","move","player","Number","x","victoryLines","length","checkPoints","state","cells","handle","newCells","nextMove","setState","playerSwitch","player1","player2","map","Players","alignItems","flexDirection","marginBottom","handlePlayer1","e","target","handlePlayer2","handleSubmit","preventDefault","getNames","onSubmit","onChange","marginTop","App","className","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01aa97a1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Cell extends React.Component {\r\n\r\n    // eslint-disable-next-line no-useless-constructor\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n    }\r\n\r\n    cell = {\r\n        margin: \"0px\",\r\n        width: \"33.33%\",\r\n        height: '33.33%',\r\n        padding: 'auto',\r\n        border: \"1px solid black\",\r\n        fontSize: \"24px\"\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <button type=\"button\" style={this.cell} id={this.props.index} onClick={()=>this.props.cellClick(this.props.id)}>{this.props.value}</button>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Cell;","import React from 'react'\r\n\r\nclass Status extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(props);\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let {currentPlayer, gameStatus} = this.props;\r\n        return (\r\n            <label>{gameStatus === \"won\" ? currentPlayer + \" Wins\" : currentPlayer + \"'s Trun\"}</label>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Status;","import React from 'react';\r\nimport Cell from './cell';\r\nimport Status from './status';\r\n\r\nclass Board extends React.Component {\r\n\r\n    // eslint-disable-next-line no-useless-constructor\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            player: this.props.player1,\r\n            nextMove: \"X\",\r\n            gameStatus : null,\r\n            cells: [null, null, null, null, null, null, null, null, null]\r\n\r\n\r\n        }\r\n\r\n        this.victoryLines = [\r\n            [[1, 2], [4, 8], [3, 6]],\r\n            [[0, 2], [4, 7]],\r\n            [[0, 1], [4, 6], [5, 8]],\r\n            [[4, 5], [0, 6]],\r\n            [[3, 5], [0, 8], [2, 6], [1, 7]],\r\n            [[3, 4], [2, 8]],\r\n            [[7, 8], [2, 4], [0, 3]],\r\n            [[6, 8], [1, 4]],\r\n            [[6, 7], [0, 4], [2, 5]]\r\n        ];\r\n    }\r\n\r\n    div = {\r\n        backgroundColor: \"black\",\r\n        color: \"white\",\r\n        height: \"300px\",\r\n        width: \"500px\",\r\n        margin: \"auto\",\r\n        padding: \"20px\"\r\n    }\r\n\r\n    turn = {\r\n        display : \"flex\",\r\n        justifyContent : \"center\",\r\n        alignContent : \"center\",\r\n        backgroundColor: \"black\",\r\n        color: \"white\",\r\n        padding : \"10px\",\r\n        marign : \"auto\",\r\n        height : \"50px\"\r\n    }\r\n\r\n    victoryCheck = (id, move, player) => {\r\n        id = Number(id);\r\n        for (let x = 0; x < this.victoryLines[id].length; x++) {\r\n            let checkPoints = this.victoryLines[id][x];\r\n            if (this.state.cells[checkPoints[0]] === move && this.state.cells[checkPoints[1]] === move) {\r\n                return player;\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    handle = (id) => {\r\n        if (this.state.cells[id] || this.state.gameStatus == \"won\")\r\n            return;\r\n        let newCells = [...this.state.cells];\r\n        newCells[id] = this.state.nextMove;\r\n\r\n        let winner = this.victoryCheck(id, this.state.nextMove, this.state.player);\r\n        if(winner === this.state.player) {\r\n            this.setState({gameStatus : \"won\"});\r\n        }\r\n\r\n        let nextMove = this.state.nextMove === \"O\" ? \"X\" : \"O\";\r\n        let playerSwitch = this.state.player === this.props.player1 ? this.props.player2 : this.props.player1;\r\n        this.setState({ cells: newCells, nextMove: nextMove, player: playerSwitch });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <div style={this.div}>\r\n                    {this.state.cells.map((value, index) => (<Cell key={index} cellClick={this.handle} value={value} id={index} />))}\r\n                </div >\r\n                <div style={this.turn}>\r\n                    <Status currentPlayer = {this.state.player} gameStatus = {this.state.gameStatus} />\r\n                </div>\r\n            </>\r\n        );\r\n\r\n    }\r\n\r\n}\r\nexport default Board;","import React from 'react'\r\n\r\nclass Players extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            player1 : \"\",\r\n            player2 : \"\"\r\n        }\r\n    }\r\n\r\n    div = {\r\n        backgroundColor: \"black\",\r\n        display: \"flex\",\r\n        alignItems : \"center\",\r\n        flexDirection: \"column\",\r\n        width: \"500px\",\r\n        height: \"20vh\",\r\n        marginBottom: \"20px\",\r\n        padding: \"20px\",\r\n\r\n    }\r\n\r\n    handlePlayer1 = (e) => {\r\n        this.setState({player1 : e.target.value});\r\n    }\r\n\r\n    handlePlayer2 = (e) => {\r\n        this.setState({player2 : e.target.value});\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.getNames(this.state.player1, this.state.player2);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={this.div}>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <lable style={{ color: \"white\" }}>Player 1 Name : </lable>\r\n                    <input type=\"text\" value = {this.state.player1} onChange={(e)=> this.handlePlayer1(e)}></input><br/>\r\n                    <label style={{ color: \"white\" }}>Player 2 Name : </label>\r\n                    <input type=\"text\" value = {this.state.player2} onChange={(e)=> this.handlePlayer2(e)}></input><br/>\r\n                    <button style={{margin : \"auto\", marginTop : \"15px\"}} type=\"submit\">Start Game</button>\r\n                </form>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Players;","// import logo from './logo.svg';\r\nimport './App.css';\r\n// import Moves from './components/moves';\r\nimport Board from './components/board';\r\n// import Table from './components/table';\r\nimport Players from './components/players'\r\nimport React from 'react'\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      player1: \"\",\r\n      player2: \"\"\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    let setNames = (player1, player2) => {\r\n      if (player1 === \"\" || player2 === \"\") {\r\n        alert(\"Player Name Fields Cannot be Empty\");\r\n      } else {\r\n        this.setState({ player1: player1, player2: player2 });\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"game\">\r\n        <Players getNames={setNames} />\r\n        <Board player1={this.state.player1} player2={this.state.player2} />\r\n        {/* <Table /> */}\r\n      </div>\r\n      // {/* <div className=\"moves\">\r\n      //   <Moves />\r\n      // </div> */}\r\n      // </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}